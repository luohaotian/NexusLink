InfoTime:[2017-01-19 20:53:58]  info:[Root WebApplicationContext: initialization started] 
InfoTime:[2017-01-19 20:53:59]  info:[Refreshing Root WebApplicationContext: startup date [Thu Jan 19 20:53:59 CST 2017]; root of context hierarchy] 
InfoTime:[2017-01-19 20:53:59]  info:[Loading XML bean definitions from file [D:\eclipse-jee-neon-R-win32-x86_64\SchoolBlog\build\classes\applicationContext-dao.xml]] 
InfoTime:[2017-01-19 20:53:59]  info:[Loading XML bean definitions from file [D:\eclipse-jee-neon-R-win32-x86_64\SchoolBlog\build\classes\applicationContext-service.xml]] 
InfoTime:[2017-01-19 20:53:59]  info:[Loading XML bean definitions from file [D:\eclipse-jee-neon-R-win32-x86_64\SchoolBlog\build\classes\applicationContext.xml]] 
InfoTime:[2017-01-19 20:53:59]  info:[Root WebApplicationContext: initialization completed in 1000 ms] 
InfoTime:[2017-01-19 20:54:00]  info:[FrameworkServlet 'SchoolBlog': initialization started] 
InfoTime:[2017-01-19 20:54:00]  info:[Refreshing WebApplicationContext for namespace 'SchoolBlog-servlet': startup date [Thu Jan 19 20:54:00 CST 2017]; parent: Root WebApplicationContext] 
InfoTime:[2017-01-19 20:54:00]  info:[Loading XML bean definitions from ServletContext resource [/WEB-INF/SchoolBlog-servlet.xml]] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/answer/refresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.refreshArticalList(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/answer/addContent]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.addContent(int,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/answer/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.saveArtical(int,int,int,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/answer/publish]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.publishArtical(int,int,int,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/answer/getAnswer]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.getAnswer(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/answer/fresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.freshArticalList(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/artical/refresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.refreshArticalList()] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/artical/addContent]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.addContent(int,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/artical/getArtical]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.getArtical(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/artical/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.saveArtical(int,int,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/artical/publish]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.publishArtical(int,int,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/artical/fresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.freshArticalList(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/comment/publishComment]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.CommentController.publishComment(int,int,java.lang.String,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/comment/getComments]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.CommentController.getComments(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/image/upload],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ImageController.uploadImg(int,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/like/delLike]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LikeController.delLike(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/like/addLike]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LikeController.addLike(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/lose/refreshPickupList]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.refreshPickupList()] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/lose/getMorePickupList]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.getMorePickupList(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/lose/solve]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.solve(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/lose/E-Card]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.pickupEcard(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/lose/refreshLoseList]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.getLoseList()] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/lose/lose]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.lose(int,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/lose/getMoreLoseList]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.getMoreLoseList(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/lose/pickup]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.pickup(int,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/problem/fresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ProblemController.refreshArticalList(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/problem/refresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ProblemController.fresh()] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/problem/publish],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ProblemController.pubishProblem(int,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/product_view/{id}]}" onto public java.lang.String com.SchoolBlog.controller.ProductController.viewProduct(java.lang.Long,org.springframework.ui.Model)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/product_input]}" onto public java.lang.String com.SchoolBlog.controller.ProductController.inputProduct()] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/product_save],methods=[POST]}" onto public java.lang.String com.SchoolBlog.controller.ProductController.saveProduct(javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.mvc.support.RedirectAttributes)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/register],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.login(java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/E-Card]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.MyEcard(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/freshMyArtical]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.freshMyArtical(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/updateInfo]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.updateInfo(int,java.lang.String)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/freshMyAnswer]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.freshMyAnswer(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/myLike]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myLike(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/freshMyProblem]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.freshMyProblem(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/myPickup]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myPickup(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/myArtical]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myArtical(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/myProblem]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myProblem(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/freshMyPickup]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.freshMyPickup(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/myLose]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myLose(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/freshMyLose]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.freshMyLose(int,int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/myAnswer]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myAnswer(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped "{[/api/user/info],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myInfo(int)] 
InfoTime:[2017-01-19 20:54:00]  info:[Looking for @ControllerAdvice: WebApplicationContext for namespace 'SchoolBlog-servlet': startup date [Thu Jan 19 20:54:00 CST 2017]; parent: Root WebApplicationContext] 
InfoTime:[2017-01-19 20:54:00]  info:[Looking for @ControllerAdvice: WebApplicationContext for namespace 'SchoolBlog-servlet': startup date [Thu Jan 19 20:54:00 CST 2017]; parent: Root WebApplicationContext] 
InfoTime:[2017-01-19 20:54:00]  info:[Looking for @ControllerAdvice: WebApplicationContext for namespace 'SchoolBlog-servlet': startup date [Thu Jan 19 20:54:00 CST 2017]; parent: Root WebApplicationContext] 
InfoTime:[2017-01-19 20:54:00]  info:[Mapped URL path [/uploads/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'] 
InfoTime:[2017-01-19 20:54:00]  info:[FrameworkServlet 'SchoolBlog': initialization completed in 874 ms] 
InfoTime:[2017-01-19 20:59:44]  info:[Root WebApplicationContext: initialization started] 
InfoTime:[2017-01-19 20:59:44]  info:[Refreshing Root WebApplicationContext: startup date [Thu Jan 19 20:59:44 CST 2017]; root of context hierarchy] 
InfoTime:[2017-01-19 20:59:44]  info:[Loading XML bean definitions from file [D:\eclipse-jee-neon-R-win32-x86_64\SchoolBlog\build\classes\applicationContext-dao.xml]] 
InfoTime:[2017-01-19 20:59:44]  info:[Loading XML bean definitions from file [D:\eclipse-jee-neon-R-win32-x86_64\SchoolBlog\build\classes\applicationContext-service.xml]] 
InfoTime:[2017-01-19 20:59:44]  info:[Loading XML bean definitions from file [D:\eclipse-jee-neon-R-win32-x86_64\SchoolBlog\build\classes\applicationContext.xml]] 
InfoTime:[2017-01-19 20:59:45]  info:[Root WebApplicationContext: initialization completed in 1005 ms] 
InfoTime:[2017-01-19 20:59:45]  info:[FrameworkServlet 'SchoolBlog': initialization started] 
InfoTime:[2017-01-19 20:59:45]  info:[Refreshing WebApplicationContext for namespace 'SchoolBlog-servlet': startup date [Thu Jan 19 20:59:45 CST 2017]; parent: Root WebApplicationContext] 
InfoTime:[2017-01-19 20:59:45]  info:[Loading XML bean definitions from ServletContext resource [/WEB-INF/SchoolBlog-servlet.xml]] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/answer/addContent]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.addContent(int,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/answer/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.saveArtical(int,int,int,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/answer/getAnswer]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.getAnswer(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/answer/publish]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.publishArtical(int,int,int,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/answer/fresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.freshArticalList(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/answer/refresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.AnswerController.refreshArticalList(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/artical/getArtical]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.getArtical(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/artical/addContent]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.addContent(int,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/artical/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.saveArtical(int,int,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/artical/publish]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.publishArtical(int,int,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/artical/fresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.freshArticalList(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/artical/refresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ArticalController.refreshArticalList()] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/comment/getComments]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.CommentController.getComments(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/comment/publishComment]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.CommentController.publishComment(int,int,java.lang.String,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/image/upload],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ImageController.uploadImg(int,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/like/addLike]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LikeController.addLike(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/like/delLike]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LikeController.delLike(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/lose/solve]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.solve(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/lose/lose]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.lose(int,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/lose/E-Card]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.pickupEcard(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/lose/refreshLoseList]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.getLoseList()] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/lose/pickup]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.pickup(int,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/lose/getMoreLoseList]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.getMoreLoseList(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/lose/getMorePickupList]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.getMorePickupList(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/lose/refreshPickupList]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.LostController.refreshPickupList()] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/problem/refresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ProblemController.fresh()] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/problem/publish],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ProblemController.pubishProblem(int,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/problem/fresh]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.ProblemController.refreshArticalList(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/product_save],methods=[POST]}" onto public java.lang.String com.SchoolBlog.controller.ProductController.saveProduct(javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.mvc.support.RedirectAttributes)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/product_input]}" onto public java.lang.String com.SchoolBlog.controller.ProductController.inputProduct()] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/product_view/{id}]}" onto public java.lang.String com.SchoolBlog.controller.ProductController.viewProduct(java.lang.Long,org.springframework.ui.Model)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/register],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.login(java.lang.String,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/updateInfo]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.updateInfo(int,java.lang.String)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/freshMyArtical]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.freshMyArtical(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/freshMyAnswer]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.freshMyAnswer(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/info],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myInfo(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/myPickup]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myPickup(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/freshMyProblem]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.freshMyProblem(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/myLike]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myLike(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/myArtical]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myArtical(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/myLose]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myLose(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/myAnswer]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myAnswer(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/freshMyPickup]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.freshMyPickup(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/freshMyLose]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.freshMyLose(int,int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/myProblem]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.myProblem(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped "{[/api/user/E-Card]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.SchoolBlog.controller.UserController.MyEcard(int)] 
InfoTime:[2017-01-19 20:59:46]  info:[Looking for @ControllerAdvice: WebApplicationContext for namespace 'SchoolBlog-servlet': startup date [Thu Jan 19 20:59:45 CST 2017]; parent: Root WebApplicationContext] 
InfoTime:[2017-01-19 20:59:46]  info:[Looking for @ControllerAdvice: WebApplicationContext for namespace 'SchoolBlog-servlet': startup date [Thu Jan 19 20:59:45 CST 2017]; parent: Root WebApplicationContext] 
InfoTime:[2017-01-19 20:59:46]  info:[Looking for @ControllerAdvice: WebApplicationContext for namespace 'SchoolBlog-servlet': startup date [Thu Jan 19 20:59:45 CST 2017]; parent: Root WebApplicationContext] 
InfoTime:[2017-01-19 20:59:46]  info:[Mapped URL path [/uploads/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'] 
InfoTime:[2017-01-19 20:59:46]  info:[FrameworkServlet 'SchoolBlog': initialization completed in 959 ms] 
InfoTime:[2017-01-19 21:02:43]  info:[Closing WebApplicationContext for namespace 'SchoolBlog-servlet': startup date [Thu Jan 19 20:59:45 CST 2017]; parent: Root WebApplicationContext] 
InfoTime:[2017-01-19 21:02:43]  info:[Closing Root WebApplicationContext: startup date [Thu Jan 19 20:59:44 CST 2017]; root of context hierarchy] 
